@{
    Layout = "~/Views/Shared/_DroppableLayout.cshtml";
}
<style>
    #draggablePreventPropagation
    {
        width: 100px;
        height: 40px;
        padding: 0.5em;
        float: left;
        margin: 10px 10px 10px 0;
        font-size:12px;
    }
    #droppablePreventPropagation1, #droppablePreventPropagation2
    {
        width: 230px;
        height: 120px;
        padding: 0.5em;
        float: left;
        margin: 10px;
        font-size:12px;
    }
    #droppablePreventPropagation1-inner, #droppablePreventPropagation2-inner
    {
        width: 170px;
        height: 60px;
        padding: 0.5em;
        float: left;
        margin: 10px;
        font-size:12px;
    }
</style>
<div id="demo-frame">
    <div class="demo">
        <div id="draggablePreventPropagation" class="ui-widget-content">
            <p>
                Drag me to my target</p>
        </div>
        <div id="droppablePreventPropagation1" class="ui-widget-header">
            <p>
                Outer droppable</p>
            <div id="droppablePreventPropagation1-inner" class="ui-widget-header">
                <p>
                    Inner droppable (not greedy)</p>
            </div>
        </div>
        <div id="droppablePreventPropagation2" class="ui-widget-header">
            <p>
                Outer droppable</p>
            <div id="droppablePreventPropagation2-inner" class="ui-widget-header">
                <p>
                    Inner droppable (greedy)</p>
            </div>
        </div>
    </div>
</div>
<div class="demo-description">
    <p>
        When working with nested droppables &#8212; for example, you may have an editable
        directory structure displayed as a tree, with folder and document nodes &#8212;
        the <code>greedy</code> option set to true prevents event propagation when a draggable
        is dropped on a child node (droppable).</p>
</div>
