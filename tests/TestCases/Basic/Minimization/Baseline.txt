Minimization Map
================================================================
    Member '__valueChanged' renamed to 'c$5'
    Member '_intVal' renamed to 'c$0'
    Member '_intVal2' renamed to 'c$1'
    Member '_intVal3' renamed to 'c$2'
    Member '_strVal' renamed to 'c$3'
    Member 'Alpha' renamed to '$0'
    Member 'Dispose' renamed to '$1'
    Member 'DoStuff' renamed to '$0'
    Member 'DoStuff' renamed to '$0'
    Member 'DoStuffBase' renamed to '$1'
    Member 'DoStuffBaseBase' renamed to '$0'
    Member 'DoStuffDelayed' renamed to '$4'
    Member 'DoStuffDerived' renamed to '$2'
    Member 'DoStuffInternal' renamed to '$3'
    Member 'ExecuteHandler' renamed to '$1'
    Member 'Foo' renamed to '$2'
    Member 'Initialize' renamed to '$0'
    Member 'Numeric' renamed to '$1'
    Member 'OnClicked' renamed to 'e$1'
    Member 'OnValueChanged' renamed to 'c$6'
    Member 'OnValueChanged' renamed to 'e$0'
    Member 'Property1' renamed to 'c$7'
    Member 'Setup' renamed to '$2'
    Member 'ShowHelp' renamed to '$0'
    Member 'string1' renamed to '$0'
    Member 'string2' renamed to '$1'
    Member 'Stuff' renamed to '$5'
    Member 'StuffProperty' renamed to '$6'
    Member 'ToString' renamed to 'toString'
    Member 'ValueChanged' renamed to 'c$4'


Script
================================================================


"use strict";

define('test', ['ss', 'lib'], function(ss, lib) {
  var $global = this;

  // BasicTests.AppFlags

  var BasicTests$AppFlags = {
    AAA: 0, 
    BBB: 1
  };


  // BasicTests.IApp

  function BasicTests$IApp() { }


  // BasicTests.MyData

  function BasicTests$MyData(a, b) {
    var $o = {};
    $o.$0 = a;
    $o.$1 = b;
    return $o;
  }


  // BasicTests.GlobalMethodsClass

  $global.run = function() {
  };


  // BasicTests.BaseBaseClass

  function BasicTests$BaseBaseClass() {
  }
  var BasicTests$BaseBaseClass$ = {
    $0: function() {
    }
  };


  // BasicTests.ABC

  function BasicTests$ABC() {
    var d = { };
  }
  var BasicTests$ABC$ = {

  };


  // BasicTests.Bar

  function BasicTests$Bar() {
  }
  var BasicTests$Bar$ = {
    $0: function() {
    },
    toString: function() {
      return null;
    },
    $1: function(handler) {
    }
  };


  // BasicTests.AppHelper

  function BasicTests$AppHelper() {
  }
  var BasicTests$AppHelper$ = {
    $0: function() {
    }
  };


  // BasicTests.App

  function BasicTests$App() {
    var helper = new BasicTests$AppHelper();
    helper.$0();
  }
  var BasicTests$App$ = {
    run: function() {
    },
    $0: function() {
    },
    $1: function() {
    }
  };


  // BasicTests.BaseClass

  function BasicTests$BaseClass() {
    BasicTests$BaseBaseClass.call(this);
  }
  var BasicTests$BaseClass$ = {
    $1: function() {
    }
  };


  // BasicTests.Bar2

  function BasicTests$Bar2() {
    BasicTests$Bar.call(this);
  }
  var BasicTests$Bar2$ = {

  };


  // BasicTests.BarCustom

  function BasicTests$BarCustom() {
    BasicTests$Bar.call(this);
  }
  var BasicTests$BarCustom$ = {

  };


  // BasicTests.BarEx

  function BasicTests$BarEx() {
    BasicTests$Bar2.call(this);
  }
  var BasicTests$BarEx$ = {
    $2: function() {
      var mode = 1;
    },
    $0: function() {
      this.$2();
      ss.base(this, '$0').call(this);
      var d = BasicTests$MyData('a', 'b');
      d.$0 = d.$1;
    },
    $3: function(blah) {
      blah = blah + 2;
    },
    $4: function(currentValue) {
      var $this = this;

      var numericValue = currentValue + 1;
      var stringValue = currentValue.toString();
      var value = 0;
      this.$1(function(indexValue, textValue) {
        $this.$1(function(indexValue, textValue) {
          var value = 11;
          return indexValue;
        });
        var value = 10;
        var value2 = 11;
        return numericValue + indexValue + stringValue + textValue + value;
      });
    },
    get_$5: function() {
      return 0;
    },
    set_$5: function(value) {
      var x = value;
      return value;
    },
    get_$6: function() {
      var $this = this;

      this.$1(function(indexValue, textValue) {
        $this.$1(function(indexValue, textValue) {
          var value = 11;
          return indexValue;
        });
        var value = 10;
        var value2 = 11;
        return indexValue + textValue + value;
      });
      return 0;
    },
    set_$6: function(value) {
      var $this = this;

      var numericValue = value + 1;
      var stringValue = value.toString();
      this.$1(function(indexValue, textValue) {
        $this.$1(function(indexValue, textValue) {
          var value1 = 11;
          return indexValue;
        });
        var value2 = 10;
        var value3 = 11;
        return numericValue + indexValue + stringValue + textValue + value + value3;
      });
      return value;
    }
  };


  // BasicTests.BarCustom2

  function BasicTests$BarCustom2() {
    BasicTests$BarCustom.call(this);
  }
  var BasicTests$BarCustom2$ = {
    $2: function() {
      return 0;
    },
    baz: function() {
      return 0;
    },
    xyz: function() {
    }
  };


  // BasicTests.FooBehavior

  function BasicTests$FooBehavior(e, i) {
    this.c$0 = 0;
    this.c$1 = 0;
    this.c$2 = 0;
    lib.Behavior.call(this, e, null);
    this.c$0 = i;
    this.c$1 = i * 2;
    this.c$2 = i * 4;
  }
  var BasicTests$FooBehavior$ = {
    add_c$4: function(value) {
      this.c$5 = ss.bindAdd(this.c$5, value);
    },
    remove_c$4: function(value) {
      this.c$5 = ss.bindSub(this.c$5, value);
    },
    dispose: function() {
      this.c$0 = 0;
      ss.base(this, 'dispose').call(this);
    },
    c$6: function() {
    },
    get_c$7: function() {
      return null;
    },
    get_item: function(name) {
      return 0;
    }
  };


  // BasicTests.DerivedClass

  function BasicTests$DerivedClass() {
    BasicTests$BaseClass.call(this);
  }
  var BasicTests$DerivedClass$ = {
    $2: function() {
    }
  };


  // BasicTests.MaskTextBox

  function BasicTests$MaskTextBox(e) {
    lib.TextBox.call(this, e);
  }
  var BasicTests$MaskTextBox$ = {
    e$0: function() {
    },
    e$1: function() {
    }
  };


  var $exports = ss.module('test',
    {
      IApp: [ BasicTests$IApp ],
      MyData: BasicTests$MyData,
      AppHelper: [ BasicTests$AppHelper, BasicTests$AppHelper$, null ],
      Bar: [ BasicTests$Bar, BasicTests$Bar$, null ],
      BaseBaseClass: [ BasicTests$BaseBaseClass, BasicTests$BaseBaseClass$, null ],
      ABC: [ BasicTests$ABC, BasicTests$ABC$, null ],
      Bar2: [ BasicTests$Bar2, BasicTests$Bar2$, BasicTests$Bar ],
      BarCustom: [ BasicTests$BarCustom, BasicTests$BarCustom$, BasicTests$Bar ],
      BaseClass: [ BasicTests$BaseClass, BasicTests$BaseClass$, BasicTests$BaseBaseClass ],
      BarEx: [ BasicTests$BarEx, BasicTests$BarEx$, BasicTests$Bar2 ],
      BarCustom2: [ BasicTests$BarCustom2, BasicTests$BarCustom2$, BasicTests$BarCustom ],
      DerivedClass: [ BasicTests$DerivedClass, BasicTests$DerivedClass$, BasicTests$BaseClass ],
      MaskTextBox: [ BasicTests$MaskTextBox, BasicTests$MaskTextBox$, lib.TextBox ]
    },
    {
      AppFlags: BasicTests$AppFlags,
      App: [ BasicTests$App, BasicTests$App$, null ],
      FooBehavior: [ BasicTests$FooBehavior, BasicTests$FooBehavior$, lib.Behavior ]
    });


  return $exports;
});
