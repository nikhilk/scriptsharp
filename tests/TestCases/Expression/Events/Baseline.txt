"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // ExpressionTests.Button

  function ExpressionTests$Button() {
  }
  ExpressionTests$Button.add_test = function(value) {
    ExpressionTests$Button.__test = ss.bindAdd(ExpressionTests$Button.__test, value);
  };
  ExpressionTests$Button.remove_test = function(value) {
    ExpressionTests$Button.__test = ss.bindSub(ExpressionTests$Button.__test, value);
  };
  var ExpressionTests$Button$ = {
    add_click: function(value) {
      this.__click = ss.bindAdd(this.__click, value);
    },
    remove_click: function(value) {
      this.__click = ss.bindSub(this.__click, value);
    },
    add_aaa: function(value) {
      if (this._aaa == null) {
        this._aaa = value;
      }
      else {
        this._aaa = ss.bindAdd(this._aaa, value);
      }
    },
    remove_aaa: function(value) {
      this._aaa = ss.bindSub(this._aaa, value);
    },
    add_bbb: function(value) {
      if (this._bbb == null) {
        this._bbb = value;
      }
      else {
        this._bbb = ss.bindAdd(this._bbb, value);
      }
    },
    remove_bbb: function(value) {
      this._bbb = ss.bindSub(this._bbb, value);
    }
  };


  // ExpressionTests.App

  function ExpressionTests$App() {
    this._btn.add_click(ss.bind('_onClickButton', this));
    this._btn.add_click(ss.bind('_onClickButton', this));
    this._btn.add_click(ss.bind('_onClickButton', this));
    this._btn.remove_click(ss.bind('_onClickButton', this));
    this._btn.remove_click(ss.bind('_onClickButton', this));
    this._btn.remove_click(ss.bind('_onClickButton', this));
    ExpressionTests$Button.add_test(ExpressionTests$App._onTestButton);
    ExpressionTests$Button.add_test(ExpressionTests$App._onTestButton);
    ExpressionTests$Button.add_test(ExpressionTests$App._onTestButton);
    ExpressionTests$Button.remove_test(ExpressionTests$App._onTestButton);
    ExpressionTests$Button.remove_test(ExpressionTests$App._onTestButton);
    ExpressionTests$Button.remove_test(ExpressionTests$App._onTestButton);
    this._btn.add_aaa(ss.bind('_onAAAButton', this));
    this._btn.add_aaa(ss.bind('_onAAAButton', this));
    this._btn.add_aaa(ss.bind('_onAAAButton', this));
    this._btn.remove_aaa(ss.bind('_onAAAButton', this));
    this._btn.remove_aaa(ss.bind('_onAAAButton', this));
    this._btn.remove_aaa(ss.bind('_onAAAButton', this));
  }
  ExpressionTests$App._onTestButton = function(sender, e) {
  };
  var ExpressionTests$App$ = {
    _onAAAButton: function(sender, e) {
    },
    _onClickButton: function(sender, e) {
    }
  };


  // ExpressionTests.FooEventArgs

  function ExpressionTests$FooEventArgs() {
    ss.EventArgs.call(this);
  }
  var ExpressionTests$FooEventArgs$ = {

  };


  var $exports = ss.module('test', null,
    {
      Button: [ ExpressionTests$Button, ExpressionTests$Button$, null ],
      App: [ ExpressionTests$App, ExpressionTests$App$, null ],
      FooEventArgs: [ ExpressionTests$FooEventArgs, ExpressionTests$FooEventArgs$, ss.EventArgs ]
    });


  return $exports;
});
