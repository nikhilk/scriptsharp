"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // ExpressionTests.IFoo

  function IFoo() { }


  // ExpressionTests.BApp

  function BApp() {
  }
  var BApp$ = {

  };


  // ExpressionTests.App

  function App() {
    this._value$1 = 0;
    this._value2 = 0;
    BApp.call(this);
  }
  var App$ = {
    $get_XYZ: function() {
      return 1;
    },
    $set_XYZ: function(value) {
      return value;
    },
    test: function(arg) {
      var s = '';
      var n = s.length;
      var n2 = Number.MAX_VALUE;
      var m = 0;
      n = this.XYZ;
      n = this.XYZ;
      this.XYZ = n;
      this.XYZ = n;
      var a;
      n = a.XYZ;
      a.XYZ = n;
      n = this._value$1;
      n = this._value$1;
      this._value$1 = n;
      this._value$1 = n;
      n = App._myDefault$1;
      n = App._myDefault$1;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
    }
  };


  // ExpressionTests.DApp

  function DApp() {
    App.call(this);
  }
  var DApp$ = {
    test2: function() {
      var n = this.XYZ;
      n = this.XYZ;
      n = ss.baseProperty(DApp, 'XYZ').get.call(this);
      this.XYZ = n;
      this.XYZ = n;
      ss.baseProperty(DApp, 'XYZ').set.call(this, n);
      this._value2 = n;
      this._value2 = n;
      this._value2 = n;
      n = App.myDefault2;
      n = App.myDefault2;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
      n = 3;
    },
    test3: function() {
      var i = [ 1, 2 ];
      i[0] = 1;
      i[1] = i[0];
      i[i[0]] = 20;
    },
    test4: function(foo) {
      foo.bar();
    }
  };


  var $exports = ss.module('test', null,
    {
      IFoo: [ ss.interfaceMarker, IFoo, null, null ],
      BApp: [ ss.classMarker, BApp, BApp$, null ],
      App: [ ss.classMarker, App, App$, BApp ],
      DApp: [ ss.classMarker, DApp, DApp$, App ]
    });

  BApp.myConstant = 3;
  App.myConstant2 = 3;
  App._myDefault$1 = 1;
  App.myDefault2 = 2;

  return $exports;
});
