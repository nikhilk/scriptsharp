"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // TypeTests.Foo

  function FooBaz() {
  }
  var FooBaz$ = {

  };


  // TypeTests.Bar

  function BarBaz(f) {
  }
  var BarBaz$ = {

  };


  // TypeTests.MyClass

  function MyClass() {
    var f = new FooBaz();
  }
  var MyClass$ = {

  };


  // TypeTests.MyClass3

  function MyClass3() {
  }
  var MyClass3$ = {

  };


  // TypeTests.StaticClass

  function StaticClass() {
  }


  // TypeTests.MyClass2

  function MyClass2() {
    MyClass.call(this);
  }
  var MyClass2$ = {

  };


  // TypeTests.MyClass4

  function MyClass4(foo, bar, disposable) {
    MyClass.call(this);
    var f = ss.createInstance();
    var b = ss.createInstance(BarBaz, f);
  }
  var MyClass4$ = {

  };


  var $exports = ss.module('test', null,
    {
      FooBaz: ss.defineClass(FooBaz, FooBaz$, [], null),
      BarBaz: ss.defineClass(BarBaz, BarBaz$, [FooBaz], null),
      MyClass: ss.defineClass(MyClass, MyClass$, [], null),
      MyClass3: ss.defineClass(MyClass3, MyClass3$, [], null, [ss.IDisposable]),
      StaticClass: ss.defineClass(StaticClass, null, [], null),
      MyClass2: ss.defineClass(MyClass2, MyClass2$, [], MyClass),
      MyClass4: ss.defineClass(MyClass4, MyClass4$, [FooBaz, BarBaz, ss.IDisposable], MyClass, [ss.IDisposable])
    });


  return $exports;
});
