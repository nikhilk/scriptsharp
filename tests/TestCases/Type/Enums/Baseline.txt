"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // TypeTests.Colors

  var TypeTests$Colors = {
    red: 0, 
    green: 1, 
    blue: 2
  };


  // TypeTests.Sequence

  var TypeTests$Sequence = {
    item1: 1, 
    item2: 2, 
    item3: 3, 
    item4: 5
  };


  // TypeTests.Mode

  var TypeTests$Mode = {
    Public: 1, 
    Protected: 2, 
    Private: 4
  };


  // TypeTests.UInt32Mask

  var TypeTests$UInt32Mask = {
    v: 4026531840, 
    a: 4278190080
  };


  // TypeTests.ShortMask

  var TypeTests$ShortMask = {
    v: 1, 
    a: 4096
  };


  // TypeTests.Errors

  var TypeTests$Errors = {
    S_OK: 0, 
    S_FALSE: 1, 
    E_FAIL: -1
  };


  // TypeTests.App

  function TypeTests$App() {
  }
  TypeTests$App.main = function() {
    var m = 1;
    m = 1 | 4;
    var c = 0;
  };
  var TypeTests$App$ = {

  };


  // TypeTests.App2

  function TypeTests$App2() {
  }
  var TypeTests$App2$ = {
    run: function() {
      var method = 'POST';
      this.run1('GET');
      this.run2('status');
      this.run2('Group');
      this.run2('Ct');
      var s = 'Medium';
    },
    run1: function(m) {
      var s = m;
    },
    run2: function(m) {
      var aCode = 65;
      var bCode = 66;
    }
  };


  var $exports = ss.module('test', null,
    {
      Colors: TypeTests$Colors,
      Sequence: TypeTests$Sequence,
      Mode: TypeTests$Mode,
      UInt32Mask: TypeTests$UInt32Mask,
      ShortMask: TypeTests$ShortMask,
      Errors: TypeTests$Errors,
      App: [ TypeTests$App, TypeTests$App$, null ],
      App2: [ TypeTests$App2, TypeTests$App2$, null ]
    });


  return $exports;
});
