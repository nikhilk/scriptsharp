"use strict";

define('test', ['ss'], function(ss) {
  var $global = this;

  // MemberTests.ITest

  function ITest() { }


  // MemberTests.Test

  function Test() {
    this.XYZ = 1;
    this.XYZ = this.name.length;
    var inter = this;
    inter.XYZ = this.name.length;
    inter.XYZ++;
    --this.XYZ;
    var v = Test.staticProp;
    v = Test.staticProp;
  }
  ss.createPropertyGet(Test, 'staticProp', function() {
    return 2006;
  });
  ss.createPropertySet(Test, 'staticProp', function(value) {
    return value;
  });
  var Test$ = {
    $get_XYZ: function() {
      return 0;
    },
    $set_XYZ: function(value) {
      return value;
    },
    $get_isFoo: function() {
      return true;
    },
    $get_name: function() {
      return 'nk';
    },
    $get__isInitialized: function() {
      return false;
    }
  };


  // MemberTests.Test2

  function Test2() {
    Test.call(this);
    var n = ss.baseProperty(Test2, 'XYZ').get.call(this);
    ss.baseProperty(Test2, 'XYZ').set.call(this, 6);
    if (n === this.XYZ) {
    }
    if (this.XYZ === n) {
    }
    n = Test.staticProp;
  }
  var Test2$ = {

  };


  var $exports = ss.module('test', null,
    {
      ITest: [ ss.interfaceMarker, ITest, null, null ],
      Test: [ ss.classMarker, Test, Test$, null ],
      Test2: [ ss.classMarker, Test2, Test2$, Test ]
    });


  return $exports;
});
